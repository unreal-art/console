name: Changeset Check

on:
  pull_request:
    types: [opened, synchronize, reopened, labeled, unlabeled, ready_for_review]

permissions:
  contents: read
  pull-requests: read

jobs:
  changeset-check:
    name: Require Changeset for Code Changes
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Determine base ref
        id: base
        run: |
          echo "base_ref=${{ github.base_ref || 'main' }}" >> $GITHUB_OUTPUT

      - name: Fetch base branch
        run: |
          git fetch origin "${{ steps.base.outputs.base_ref }}":"refs/remotes/origin/${{ steps.base.outputs.base_ref }}"

      - name: Detect code changes
        id: changed
        run: |
          CHANGED_FILES=$(git diff --name-only "origin/${{ steps.base.outputs.base_ref }}...HEAD")
          echo "Changed files:"
          echo "$CHANGED_FILES"
          CODE_CHANGES=false
          for f in $CHANGED_FILES; do
            # Skip docs and changesets
            case "$f" in
              aidocs/*|README*|*.md|.changeset/*)
                continue
                ;;
            esac
            # Skip tests and e2e
            case "$f" in
              tests/*|**/*.test.*|**/*.spec.*|playwright/*|playwright.config.*|e2e/*)
                continue
                ;;
            esac
            case "$f" in
              src/*|utils/*|public/*|index.html|vite.config.*|tailwind.config.*|eslint.config.*|tsconfig*.json|package.json)
                CODE_CHANGES=true
                break
                ;;
            esac
          done
          echo "code_changes=$CODE_CHANGES" >> $GITHUB_OUTPUT

      - name: Check skip-changeset label
        id: labels
        uses: actions/github-script@v7
        with:
          script: |
            const labels = (context.payload.pull_request?.labels || []).map(l => l.name)
            core.info(`PR labels: ${labels.join(', ')}`)
            core.setOutput('skip', labels.includes('skip-changeset') ? 'true' : 'false')

      - name: Detect changeset files in PR
        id: cs
        run: |
          CHANGESET_FILES=$(git diff --name-only "origin/${{ steps.base.outputs.base_ref }}...HEAD" -- .changeset/*.md || true)
          echo "Changeset files changed:"
          echo "$CHANGESET_FILES"
          if [ -n "$CHANGESET_FILES" ]; then
            echo "has_changesets=true" >> $GITHUB_OUTPUT
          else
            echo "has_changesets=false" >> $GITHUB_OUTPUT
          fi

      - name: Fail if code changes without changeset
        if: ${{ steps.changed.outputs.code_changes == 'true' && steps.labels.outputs.skip != 'true' && steps.cs.outputs.has_changesets != 'true' }}
        run: |
          echo "This PR changes code but does not include a changeset. Run 'bun run changeset' and commit the generated file under .changeset/. If this PR is docs/tests-only, apply the 'skip-changeset' label." >&2
          exit 1
